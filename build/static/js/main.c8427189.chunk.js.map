{"version":3,"sources":["pages/home.js","components/productItem.js","pages/products.js","api/products.js","components/cartItem.js","store/actions/actions.js","store/actions/types.js","pages/cart.js","pages/product.js","components/cartIcon.js","store/store.js","store/reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","Component","ProductItem","className","src","this","props","product","image","alt","name","price","to","id","Products","state","loading","products","Promise","resolve","then","data","setTimeout","setState","style","width","height","role","map","index","key","CartItem","removeFromCart","item","quantity","onClick","connect","dispatch","type","Cart","btnPlaceOrderClasses","classNames","enableBtnPlaceOrder","btnClearCartClasses","enableBtnClearCart","cartItems","total","disabled","placeOrder","clearCart","enableBtn","undefined","cart","length","reduce","code","message","res","result","createPlaceOrder","Product","changeQuantity","event","num","parseInt","target","value","alert","addToCart","q","find","getProductById","match","params","producti","btnAddtoCartClasses","description","max","min","onChange","totalQuantity","getTotalQuantity","ownProps","CartIcon","initialState","localStorage","getItem","JSON","parse","e","loadStateFromLocalStorage","enableReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","applyThunk","applyMiddleware","thunk","appReducer","combineReducers","action","newState","addToCard","confirm","findIndex","splice","store","createStore","compose","subscribe","throttle","getState","console","log","setItem","stringify","App","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","path","component","exact","AppWithStore","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c8427189.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Home extends Component {\r\n\r\n    render() {\r\n        return <div>\r\n\r\n\r\n\r\n\r\n        </div>;\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nexport default class ProductItem extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"card\" >\r\n                <img src={this.props.product.image} className=\"card-img-top \" alt=\"...\" />\r\n                <div className=\"card-body\">\r\n        <p className=\"h5 card-title\">{this.props.product.name}</p>\r\n        <p className=\"card-text\">{this.props.product.price} $</p>\r\n                    <Link to={\"/products/\"+this.props.product.id} className=\"btn btn-primary\">Details</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport ProductItem from '../components/productItem'\r\nimport  {getAll}  from '../api/products'\r\nexport default class Products extends Component {\r\n\r\n    state = {\r\n        loading:true,\r\n        products: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        getAll().then(data => {\r\nsetTimeout(()=>\r\n            this.setState({\r\n                loading:false,\r\n                products: data\r\n            }),1000);\r\n        });\r\n    }\r\n    render() {\r\n        if (this.state.loading)\r\n        return (<div className=\"text-center\"><br/><br/><div className=\"text-center  spinner-border  text-primary\" style={{width: \"10rem\", height: \"10rem\"}} \r\n        role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div></div>);\r\n\r\n        return <div>\r\n            <h1>Products</h1>\r\n            <div className=\"row\">\r\n                {this.state.products.map((product, index) =>\r\n                    <div className=\"col-lg-4 col-md-6 col-sm-12\" key={index}>\r\n                        <ProductItem product={product} />\r\n                    </div>)\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>;\r\n    }\r\n}","import products from './products.json'\r\n\r\nexport function getAll() {\r\n    return Promise.resolve(products);\r\n}\r\nexport function getProductById(id) {\r\n    const product = products.find(item => item.id === id);\r\n    return Promise.resolve(product);\r\n}\r\n\r\nexport function placeOrder() {\r\n    return Promise.resolve({code:200,message:\"The order has been successfully placed\"});\r\n  //  return Promise.resolve({code:503,message:\"Failed\"});\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { removeFromCart } from '../store/actions/actions'\r\nimport { connect } from \"react-redux\"\r\n\r\n class CartItem extends Component {\r\n    removeFromCart=()=>{\r\n        \r\n    this.props.removeFromCart(this.props.item.product.id);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"card\" >\r\n                <img src={this.props.item.product.image} className=\"card-img-top \" alt=\"...\" />\r\n                <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{this.props.item.product.name}</h5>\r\n        <p className=\"card-text\">{this.props.item.product.price} $</p>\r\n        <br/>\r\n        Quantity: {this.props.item.quantity}\r\n        <br/>\r\n        Total: {this.props.item.product.price*this.props.item.quantity}$\r\n        <br/>\r\n        <br/>\r\n                    <Link to=\"#\" className=\"btn btn-danger\" onClick={this.removeFromCart}>\r\n                        <i className='fa fa-trash'></i> Delete</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeFromCart: (id) => dispatch(removeFromCart(id)),\r\n    };\r\n}\r\n\r\n\r\n    \r\n\r\nexport default connect(null, mapDispatchToProps)(CartItem);","import { ADD_TO_CART, REMOVE_FROME_CART, CLEAR_CART ,PLACE_ORDER} from './types'\r\nimport {placeOrder as placeOrderApi}  from '../../api/products'\r\nexport function addToCart(product, quantity) {\r\n  return {\r\n    type: ADD_TO_CART,\r\n    product,\r\n    quantity\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction createPlaceOrder(res) {\r\n  return {\r\n    type: PLACE_ORDER,\r\n    result:res\r\n  }\r\n}\r\n\r\n//use thunk for placeOrder ,call api and then dispatch (async use case)\r\nexport function placeOrder() {\r\n  return (\r\n    (dispatch) => {\r\n      placeOrderApi().then(res=>\r\n  dispatch(createPlaceOrder(res))\r\n\r\n);\r\n    })\r\n\r\n}\r\n\r\n//test thunk  (action creation usecase)\r\nexport function clearCart() {\r\n  return dispatch=>dispatch({type:CLEAR_CART});\r\n}\r\n\r\n\r\n\r\nexport function removeFromCart(id) {\r\n\r\n  return {\r\n    type: REMOVE_FROME_CART,\r\n    id\r\n  };\r\n\r\n}","export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROME_CART = 'REMOVE_FROME_CART';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\nexport const PLACE_ORDER = 'PLACE_ORDER';","import React, { Component } from \"react\";\r\nimport CartItem from '../components/cartItem'\r\n\r\nimport { clearCart,placeOrder } from '../store/actions/actions'\r\nimport { connect } from \"react-redux\"\r\nimport  classNames   from 'classnames'\r\nclass Cart extends Component {\r\n\r\n\r\n    render() {\r\n        let btnPlaceOrderClasses =\r\n        classNames ('btn btn-primary btn-block',{'disabled': !this.props.enableBtnPlaceOrder });\r\n        let btnClearCartClasses =\r\n        classNames ('btn btn-danger btn-block',{'disabled': !this.props.enableBtnClearCart });\r\n\r\n    return<div>\r\n            <h1>Cart</h1>\r\n    <div className=\"row\">\r\n\r\n        {this.props.cartItems.map((item) =>\r\n            <div className=\"col-lg-4 col-md-6 col-sm-12\" key={item.product.id}>\r\n                <CartItem item={item} />\r\n            </div>)\r\n        }\r\n    </div>\r\n    <br />\r\n    <h3>\r\n        Total: {this.props.total}$\r\n            </h3>\r\n      \r\n    <button disabled={!this.props.enableBtnPlaceOrder} className={btnPlaceOrderClasses} onClick={this.props.placeOrder}>Place order</button>\r\n    <button disabled={!this.props.enableBtnClearCart} className={btnClearCartClasses} onClick={this.props.clearCart}>Clear cart</button>\r\n    \r\n        </div >;\r\n    }\r\n}\r\nconst mountStateToProps = (state) => {\r\n    var enableBtn = false;\r\n \r\n    if (typeof (state.cart) != undefined && state.cart.length > 0)\r\n        enableBtn = true;\r\n\r\n    return {\r\n        cartItems: state.cart,\r\n        total: state.cart.reduce((total, item) => total + item.quantity * item.product.price, 0),\r\n        enableBtnPlaceOrder: enableBtn,\r\n        enableBtnClearCart:enableBtn\r\n    };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         clearCart: () => dispatch(clearCart()),\r\n//     };\r\n// }\r\n\r\nexport default connect(mountStateToProps, {clearCart,placeOrder})(Cart);","import React, { Component } from \"react\";\r\nimport { getProductById } from '../api/products'\r\nimport { addToCart } from '../store/actions/actions'\r\nimport { connect } from \"react-redux\"\r\nimport classNames from 'classnames'\r\nclass Product extends Component {\r\n    state = {\r\n        loading: true,\r\n        product: {},\r\n        quantity: 0\r\n    };\r\n    changeQuantity = (event) => {\r\n        let num = parseInt(event.target.value);\r\n        if (num > 20) {\r\n            alert(\"Max number is 20\");\r\n            //TODO add modal and delete alert\r\n\r\n            this.setState({\r\n                quantity: 20\r\n            });\r\n\r\n        } else {\r\n\r\n            this.setState({\r\n                quantity: num\r\n            });\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const id = this.props.match.params.id;\r\n\r\n        getProductById(id).then(producti =>\r\n            setTimeout(() =>\r\n                this.setState({ product: producti, loading: false }), 1000\r\n\r\n            ));\r\n\r\n    };\r\n    addToCart = (product) => {\r\n        const q = this.state.quantity;\r\n        this.setState({ quantity: 0 });\r\n        return this.props.addToCart(product, q);\r\n    };\r\n    render() {\r\n        if (this.state.loading)\r\n            return (<div className=\"text-center\"><br /><br /><div className=\"text-center  spinner-border  text-primary\" style={{ width: \"10rem\", height: \"10rem\" }}\r\n                role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div></div>);\r\n\r\n\r\n        const product = this.state.product;\r\n\r\n        let btnAddtoCartClasses =\r\n            classNames('btn btn-primary btn-block', { 'disabled': this.state.quantity === 0 });\r\n\r\n        return (<div className=\"row\">\r\n            <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                <img alt=\"...\" src={product.image} width={'100%'} ></img>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                <h1>{product.name}</h1>\r\n                <p>Price: {product.price}$</p>\r\n                <p> {product.description}</p>\r\n\r\n                <input type=\"number\" max=\"20\" min=\"0\" value={this.state.quantity} onChange={this.changeQuantity} />\r\n                <br />\r\n                <br />\r\n                <p> Total: {this.state.quantity * product.price}</p>\r\n                <button disabled={(this.state.quantity === 0)} className={btnAddtoCartClasses} onClick={() => this.addToCart(product)} >\r\n                    Add to cart{\" \"}\r\n                    <span className=\"badge badge-danger\" >{this.props.totalQuantity}</span>\r\n                </button>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToCart: (product, quantity) => dispatch(addToCart(product, quantity)),\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        totalQuantity: getTotalQuantity(state, ownProps.match.params.id)\r\n    }\r\n}\r\nfunction getTotalQuantity(state, id) {\r\n    let item = state.cart.find(item => item.product.id === id);\r\n    if (item) {\r\n\r\n        return item.quantity;\r\n    } else {\r\n        return \"0\";\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);","import React, { Component } from \"react\";\r\nimport './cartIcon.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from \"react-redux\"\r\n\r\nexport  class CartIcon extends Component {\r\n    render(){\r\n        return (<div id = \"cart-icon\"> \r\n        <Link to = \"/cart\">\r\n            <i className=\"fa fa-shopping-cart\" > </i>\r\n    <span className=\"badge badge-danger\">{this.props.totalQuantity}</span>\r\n        </Link>\r\n        </div>);\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\nreturn {\r\ntotalQuantity:state.cart.reduce((total,item)=>total + parseInt(item.quantity),0)\r\n};\r\n};\r\nexport default connect(mapStateToProps)(CartIcon);","import { createStore, compose, applyMiddleware,combineReducers } from 'redux'\r\nimport cartReducer from './reducers/index'\r\nimport thunk from \"redux-thunk\"\r\nimport throttle from 'lodash.throttle'\r\nfunction loadStateFromLocalStorage() {\r\n    try {\r\n        const state = localStorage.getItem('cart');\r\n        if (state !== null) {\r\n            return JSON.parse(state);\r\n\r\n        }\r\n    } catch (e) {\r\n        //ignore error \r\n    }\r\n  \r\n        return {\r\n            cart:[]\r\n        };\r\n    \r\n}\r\n\r\nfunction saveToLocalStorage(state) {\r\n    console.log('save state');\r\n    localStorage.setItem('cart', JSON.stringify(state))\r\n}\r\n\r\nconst initialState = loadStateFromLocalStorage();\r\n\r\n\r\nconst enableReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nconst applyThunk = applyMiddleware(thunk);\r\nconst appReducer =  combineReducers({\r\n    cart:cartReducer\r\n});\r\n\r\n\r\n\r\nconst store = createStore(appReducer, initialState, compose(applyThunk, enableReduxDevTools));\r\n\r\n//save state every 2 s\r\n\r\n    store.subscribe(throttle(() => \r\nsaveToLocalStorage(store.getState()),2000));\r\nexport default store;","import { ADD_TO_CART, REMOVE_FROME_CART, CLEAR_CART,PLACE_ORDER } from \"../actions/types\";\r\n\r\n\r\nexport default function cartReducer(state, action) {\r\n\r\n    switch (action.type) {\r\n        case ADD_TO_CART: {\r\n            return addToCard(state, action);\r\n        }\r\n        case REMOVE_FROME_CART: {\r\n            return removeFromCart(state, action);\r\n        }\r\n        case PLACE_ORDER: {\r\n            return placeOrder(state, action);\r\n        }\r\n        case CLEAR_CART: {\r\n            return clearCart(state, action);\r\n        }\r\n    \r\n    \r\n\r\n        default:\r\n            if (state===undefined)\r\n            return [];\r\n            else\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nfunction addToCard(state, action) {\r\n    //if the product is in the cart so increese the quantity else add it \r\n    let newState = [...state];\r\n    let item = newState.find(item => item.product.id === action.product.id);\r\n    if (item) {\r\n        item.quantity = parseInt(action.quantity) + parseInt(item.quantity);\r\n    return newState;\r\n    } else {\r\n        return  [\r\n                ...state,\r\n                {\r\n                    product: action.product,\r\n                    quantity: action.quantity\r\n                }\r\n                ];\r\n        \r\n    }\r\n\r\n}\r\n\r\nfunction removeFromCart(state, action) {\r\n    if (!window.confirm(\"Are yous sure want to delete this item.\"))\r\n    return state;\r\n\r\n    let newState = [...state];\r\n    let index = newState.findIndex(item => item.product.id === action.id);\r\n    if (index > -1)\r\n        newState.splice(index, 1)\r\n    return newState;\r\n}\r\n\r\nfunction placeOrder(state, action) {\r\n    alert(action.result.message);\r\n    if (action.result.code === 200)\r\n        return [];\r\n    else\r\n\r\n     return state;\r\n}\r\n\r\nfunction clearCart(state, action) {\r\n  if (window.confirm(\"Are yous sure want to clear Cart\"))\r\n        return [];\r\n \r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport Home from './pages/home'\nimport Products from './pages/products'\nimport Cart from './pages/cart'\nimport Product from './pages/product'\nimport CartIcon from './components/cartIcon'\nimport store from './store/store'\nimport { Provider } from 'react-redux'\nimport classNames from 'classnames'\nimport {Nav,Navbar} from 'react-bootstrap'\nclass App extends Component {\n  render() {\n\n    return (\n      <Router>\n        <div className=\"container\">\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n            <Navbar.Brand href=\"/home\">Home</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"mr-auto\">\n              \n                <Nav.Link href=\"/products\">products</Nav.Link>\n                <Nav.Link href=\"/cart\">cart</Nav.Link>\n              </Nav>\n            \n            </Navbar.Collapse>\n          </Navbar>\n          <Route path='/' component={Home} exact />\n          <Route path='/products' component={Products} exact />\n          <Route path='/products/:id' component={Product} />\n          <Route path='/cart' component={Cart} />\n\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction AppWithStore() {\n\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n\n}\n\nexport default AppWithStore;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}